name: Release New

permissions:
  contents: write

on:
  workflow_run:
    workflows: ["Update Version and Create Tag"]
    types:
      - completed
    conclusions:
      - success

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.determine.outputs.tag }}
      pre_release: ${{ steps.determine.outputs.pre_release }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine tag and pre-release status
        id: determine
        shell: bash
        run: |
          # Get the last tag
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "TAG_NAME is $TAG_NAME"
          # Determines if the tag matches a pre-release
          if [[ "$TAG_NAME" == *"alpha"* || "$TAG_NAME" == *"beta"* || "$TAG_NAME" == *"rc"* ]]; then
            PRE_RELEASE=true
          else
            PRE_RELEASE=false
          fi
          echo "Determined pre_release: $PRE_RELEASE"
          # Defines the outputs of the job for reuse in the job build
          echo "::set-output name=tag::$TAG_NAME"
          echo "::set-output name=pre_release::$PRE_RELEASE"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.determine.outputs.tag }}
          name: "Release ${{ steps.determine.outputs.tag }}"
          prerelease: ${{ steps.determine.outputs.pre_release }}

  build:
    needs: create-release
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --network-timeout 1000000

      - name: Build project (Windows)
        if: runner.os == 'Windows'
        run: yarn electron:build --windows
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build project (macOS)
        if: runner.os == 'macOS'
        run: yarn run electron:build --mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Build project (Linux)
        if: runner.os == 'Linux'
        run: yarn run electron:build --linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create-release.outputs.tag }}
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.deb
            dist/*.tar.xz
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
